---
# Paths for the output
paths:
  # base output directory
  out_dir: ~/utopia_output

  # model note is added to the output directory path
  model_note: ~

  # From the two above, the run directory will be created at:
  # <out_dir>/<model_name>/<timestamp>-<model_note>/
  # With subfolders: config, eval, universes

  # Whether to save all involved config files granularly, i.e. one by one.
  # If false, only the resulting meta_cfg is saved to the config subdirectory.
  backup_involved_cfg_files: true

# Whether to perfom a parameter sweep
perform_sweep: false
# NOTE This will be ignored if run_single or run_sweep are called directly

# Run configuration for the WorkerManager
run_kwargs:
  # Whether to forward the worker streams to the main thread's stdout
  forward_streams: true

  # Total timeout (in s) of a run; to ignore, set to ~
  timeout: ~

  # A list of StopCondition objects to check during the run _for each worker_
  # The entries of the following list are OR-connected, i.e. it suffices that
  # one is fulfilled for the corresponding worker to be stopped
  stop_conditions: ~
  # EXAMPLE:
    # - !stop-condition
    #   name: single simulation timeout
    #   description: terminates a worker if it ran for too long
    #   enabled: true  # also the default value
    #   to_check:
    #     # The functions specified here are AND-connected, i.e.: _all_
    #     # need to return True for the stop condition to be fulfilled
    #     - func_name: timeout_wall
    #       # will look for utopya.stopcond._sc_timeout_wall method
    #       seconds: !expr 60*10
    #       # further arguments to utopya.stopcond._sc_timeout_wall

# Worker Manager
worker_manager:
  # specify how many processes work in parallel
  # auto : number of processor cores. For values <= 0: #CPUs - num_workers
  num_workers: auto

  # delay between polls [seconds]
  poll_delay: 0.05

# Reporter
reporter: {}

# Data Manager
data_manager: {}

# Plot Manager
plot_manager: {}

# Parameter Space - default values are set by the model config
parameter_space: {}
