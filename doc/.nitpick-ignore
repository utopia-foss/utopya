# A list of (reference type, target module type) pairs that should be ignored
# in sphinx' nitpicky mode
#
# NOTE Before adding something here, make sure that these really are to be
#      ignored! There is a good chance that these entries could actually be
#      referenced when specified correctly.
#
#      You can use the `sphobjinv` package which comes in very handy for that:
#
#           https://github.com/bskinn/sphobjinv
#
#           sphobjinv suggest <intersphinx-url> <name-to-lookup> -su
#
# -----------------------------------------------------------------------------

# -- Docstring-content --
# The (<type>, optional) part of parameter definitions is seemingly interpreted
# as a type reference, so we need to ignore it.
py:class optional

# -- Python builtin types --
# ... that cannot be referenced (for whatever reason)
py:class module
py:class ModuleType

# -- third-party packages --
py:class xarray.core.dataarray.DataArray
py:class xarray.core.dataset.Dataset
py:class h5py._hl.dataset.Dataset


# -- first-party packages --
# ...


# -- utopya-internal --



# -- Regex patterns -----------------------------------------------------------
# These are added to the nitpick_ignore_regex list and allow regex patterns in
# both the reference type and the target.
# To add to that list, lines need to start with `re: `, for example:
#
#   re: py:class .*Remove all items from D.*
#
# NOTE That the regex pattern needs to match the whole string, as if ^ and $
#      would be inserted.

# From pydantic and ruamel.yaml (missing from intersphinx)
re: py:class pydantic..*
re: py:class ruamel..*

# From inherited code that uses `:` in places that are mis-interpreted
# ...
